arima <- auto.arima(ts(train,start=start(train),frequency = 7), seasonal = TRUE)
View(test)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
plot(pre)
abline(text)
train_ts <- ts(train,start=c(2015-07-01),frequency = 7)
tarin_ts
train_ts
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
train_ts <- ts(train,start=start(train),frequency = 7)
train_ts
start(train)
train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
train_ts
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 7)
train <- window(ts_new, start = c(2015,07,01), end = c(2017,07,10))
train <- window(ts_new, start = c(2015,07), end = c(2017,07))
train <- window(ts_new, start = c(2015,07,1), end = c(2017,07,10))
train <- window(ts_new, start = c(2015,07,01), end = c(2017,07,10))
train <- window(ts_new, start = c(2015,07), end = c(2017,07))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 1)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 1)
ts_new
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 7)
train <- window(ts_new, start = c(2015,07), end = c(2017,07))
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start ="2015-07-01",frequency = 7)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =train$date[1],frequency = 7)
train$date[1]
train$Date[1]
df$Date[1]
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = df$date[1],frequency = 7)
df$date[1]
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = df$Date[1],frequency = 7)
train <- window(ts_new, start = c(2015), end = c(2017,07))
train <- window(ts_new, start = 2015, end = c(2017,07))
train <- window(ts_new, start = 2015, end = c(2017,7))
train <- window(ts_new, start = 2015, end = c(2017,7))
ts_new
df$Date[1]
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = df$Date[1])
ts_new
train <- window(ts_new, start = 2015, end = c(2017,7))
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = 0, frequency=7)
ts_new
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,7,1), frequency=7)
ts_new
c(2014, as.numeric(format(inds[1], "%j")
)
as.numeric(format(inds[1], "%j")
as.numeric(format(df$Date[1], "%j"))
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=7)
#train <- window(ts_new, start = 2015, end = c(2017,7))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(ts_new, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
ts_new
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=365)
#train <- window(ts_new, start = 2015, end = c(2017,7))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(ts_new, seasonal = TRUE)
pre <- forecast(arima, h=62)
36
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=365)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=365)
ts_new
#train <- window(ts_new, start = 2015, end = c(2017,7))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(ts_new, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
train <- window(ts_new, start = 2015, end = c(2017,7))
as.numeric(format("2017-07-10", "%j"))
df$Date[1]
t <- as.Date("2017-07-10")
as.numeric(format(t, "%j"))
train <- window(ts_new, start = c(2015), end = c(2017,191))
as.numeric(format(df$Date[1], "%j"))
train <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,1), frequency=7)
ts_new
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=365)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=7)
train <- window(ts_new, start = c(2015,182), end = c(2017,191))
pre <- forecast(arima, h=62)
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
ts_new
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=7)
ts_new
View(ts1)
train <- ts1["/2017-7-10"]
test <- ts1["2017-7-11/"]
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
View(ts)
test <- ts1["2017-7-11/"]
train <- ts1["/2017-7-10"]
test <- ts1["2017-7-11/"]
train <- ts1["/2017-07-10"]
test <- ts1["2017-07-11/"]
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
train_ts <- ts(train,start=start(train), end = end(train),frequency = 365)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 365)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
arima <- auto.arima(train, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
train_ts <- ts(train,start=start(train),frequency = 31)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(text)
summary(arima)
accuracy(pre,test)
abline(text)
abline(test)
abline(test.V)
View(test)
abline(test.V1)
test
test[,1]
abline(test[,1])
abline(test[,1])
#ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=365)
ts1_clean <- tsclean(ts1)
train <- ts1_clean["/2017-07-10"]
test <- ts1_clean["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
mean(abs((test-pre)/test)) * 100
mean(abs((test-pre)/test)) * 100
mean(abs((test[,1]-pre)/test)) * 100
accuracy(pre,test)
test[,1]
abline(test[,1])
abline(v=.index(X)[50], col="red")
abline(v=.index(test)[50], col="red")
abline(x=.index(test), y = test[,1], col="red")
plot(test)
plot(pre)
plot(arima$x,col="red")
lines(fitted(arima),col="blue")
plot(arima$x,col="red")
lines(fitted(arima),col="blue")
lines(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents,col = "black")
plot(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents,col="red")
plot(arima$x,col="red")
lines(fitted(arima),col="blue")
plot(arima$x,col="black")
lines(fitted(arima),col="red")
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))), frequency=365)
train <- ts1_clean["/2017-07-10"]
train <- tsclean(train)
test <- ts1_clean["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#abline(x=.index(test), y = test[,1], col="red")
summary(arima)
accuracy(pre,test)
plot(ts_new,col="black")
lines(fitted(arima),col="red")
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))))
plot(ts_new,col="black")
lines(fitted(arima),col="red")
plot(ts_new,col="black")
lines(arima$fitted,col="red")
setwd("~/Desktop/TS Final Project")
train <- read.csv("final_ts.csv", header=T)
df <-  train[2:3]
df$Date <- as.Date(df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))))
train <- ts_new["/2017-07-10"]
train <- tsclean(train)
library(forcats)
library(forecast)
train <- tsclean(train)
train <- tsclean(train)
library(xts)
library(forecast)
train <- read.csv("final_ts.csv", header=T)
df <-  train[2:3]
df$Date <- as.Date(df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))))
train <- ts_new["/2017-07-10"]
train <- tsclean(train)
temp <- ts_new["/2017-07-10"]
train <- tsclean(temp)
ts1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
test <- ts1_1["2017-07-11/"]
test <- ts_1["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
plot(test)
#abline(x=.index(test), y = test[,1], col="red")
summary(arima)
knitr::opts_chunk$set(echo = TRUE)
library(xts)
train <- read.csv("final_ts.csv", header=T)
df <-  train[2:3]
df$Date <- as.Date(df$Date)
ts1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 30)
plot(stl(ts_new,s.window = "periodic"))
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
library(xts)
train <- read.csv("final_ts.csv", header=T)
df <-  train[2:3]
df$Date <- as.Date(df$Date)
ts1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 30)
plot(stl(ts_new,s.window = "periodic"))
library(forecast)
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
test <- ts_1["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
plot(ts_new,col="black")
lines(arima$fitted,col="red")
library(forecast)
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
test <- ts_1["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
plot(ts_new,col="black")
lines(arima$fitted,col="red")
plot(arima$residuals)
library(forecast)
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
test <- ts_1["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
plot(ts_new,col="black")
lines(arima$fitted,col="red")
acf(arima$residuals))
library(forecast)
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
test <- ts_1["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
summary(arima)
accuracy(pre,test)
plot(ts_new,col="black")
lines(arima$fitted,col="red")
acf(arima$residuals)
acf(arima$residuals)
acf(arima$residuals,main = "acf for residual")
library(xts)
train <- read.csv("final_ts.csv", header=T)
df <-  train[2:3]
df$Date <- as.Date(df$Date)
ts1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 30)
#plot(stl(ts1, s.window = "periodic", t.window = 30))
plot(stl(ts_new,s.window = "periodic"))
library(forecast)
co2.fit <- tbats(ts)
plot(co2.fit)
plot(ts1['2016-01/2016-03'],main ="The Big Bang Theory")
library(tidyverse)
library(radiant.data)
colnames(train)
w1<- train[,c(2,3)] %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(wday_views = mean(The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents)) %>%
mutate(wday_views = wday_views/mean(wday_views)) %>%
mutate(id = "English")
w2<- train[,c(2,8)] %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(wday_views = mean(The_Big_Bang_Theory_fr.wikipedia.org_all.access_all.agents)) %>%
mutate(wday_views = wday_views/mean(wday_views)) %>%
mutate(id = "French")
w3<- train[,c(2,22)] %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(wday_views = mean(The_Big_Bang_Theory_es.wikipedia.org_all.access_all.agents)) %>%
mutate(wday_views = wday_views/mean(wday_views)) %>%
mutate(id = "Español")
w4<- train[,c(2,27)] %>%
mutate(Date = wday(Date, label = TRUE)) %>%
group_by(Date) %>%
summarise(wday_views = mean(The_Big_Bang_Theory_de.wikipedia.org_all.access_all.agents)) %>%
mutate(wday_views = wday_views/mean(wday_views)) %>%
mutate(id = "Germany")
all_w <- bind_rows(w1,w2,w3,w4)
all_w %>%
ggplot(aes(Date, wday_views, color = id)) +
geom_jitter(size = 4, width = 0.1) +
labs(x = "Day of the week", y = "Relative average views")
t1 <- t(train[,3])
t2 <- t(train[,8])
t3 <- t(train[,22])
t4 <- t(train[,27])
thedate <- t(train$Date)
allt <- as.data.frame(rbind(t1,t2,t3,t4))
language <- c("English","French","Español","Germany")
allt <- cbind(language,allt)
colnames(allt) <- thedate
library(ggplot2)
library(reshape2)
meltdf <- melt(allt,id="Date")
temp <- melt(allt,id.vars=c("language"),value.name="value",
variable.name="Day")
covid_plot <- ggplot(data=temp, aes(x=as.Date(Day), y=value, group = language,
colour = language)) + geom_line() +labs(y= "View", x = "Day")
covid_plot + ggtitle("Webpage trafic for different languages")+geom_point()
covid_plot
ts_1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start = c(2015,as.numeric(format(df$Date[1], "%j"))))
temp <- ts_1["/2017-07-10"]
train <- tsclean(temp)
test <- ts_1["2017-07-11/"]
train_ts <- ts(train,start=start(train),frequency = 7)
arima <- auto.arima(train_ts, seasonal = TRUE)
pre <- forecast(arima, h=62)
plot(pre)
#plot(test)
#abline(x=.index(test), y = test[,1], col="red")
summary(arima)
accuracy(pre,test)
plot(ts_new,col="black")
lines(arima$fitted,col="red")
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
#arima <- auto.arima(train, seasonal = TRUE)
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
#arima <- auto.arima(train, seasonal = TRUE)
#pre <- forecast(arima, h=62)
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
#arima <- auto.arima(train, seasonal = TRUE)
#pre <- forecast(arima, h=62)
#plot(pre)
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
#arima <- auto.arima(train, seasonal = TRUE)
#pre <- forecast(arima, h=62)
#plot(pre)
#abline(text)
#tstrain <- window(ts_new, start = c(2015,182), end = c(2017,191))
#train_ts <- ts(train,start=start(train), end = end(train),frequency = 7)
#arima <- auto.arima(train, seasonal = TRUE)
#pre <- forecast(arima, h=62)
#plot(pre)
#abline(text)
#summary(arima)
acf(arima$residuals,main = "acf for residual")
library(xts)
train <- read.csv("final_ts.csv", header=T)
df <-  train[2:3]
df$Date <- as.Date(df$Date)
ts1 <- xts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, order.by=df$Date)
ts_new <- ts(df$The_Big_Bang_Theory_en.wikipedia.org_all.access_all.agents, start =c(2015-07-01),frequency = 30)
plot(stl(ts_new,s.window = "periodic"))
adf.test(diff(train))
library(tseries)
adf.test(diff(train))
library(tseries)
adf.test(diff(ts1))
View(ts1)
library(tseries)
#adf.test(diff(ts1))
adf.test(ts1)
library(tseries)
adf.test(diff(ts1))
library(tseries)
adf.test(diff(ts1))
library(tseries)
#adf.test(diff(ts1))
kpss.test(diff(ts1))
diff(ts1)
library(tseries)
adf.test(diff(ts1)[:,1:])
library(tseries)
adf.test(diff(ts1)[,1:])
diff(ts1)[,1:]
library(tseries)
dif = diff(ts1)
adf.test(dif[1:,])
library(tseries)
dif = diff(ts1)
adf.test(dif[1:,:])
dif
dif.length()
View(dif)
library(tseries)
dif = diff(ts1)
adf.test(dif[1:803,])
library(tseries)
dif = diff(ts1)
adf.test(dif[2:803,])
kpss.test(diff(ts1))
library(tseries)
dif = diff(ts1)
adf.test(dif[2:803,])
kpss.test(diff(ts1))
library(tseries)
diff = diff(ts1)[2:803,]
adf.test(diff)
kpss.test(diff)
